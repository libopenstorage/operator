---
apiVersion: batch/v1
kind: Job
metadata:
  name: px-k8s-retriever-job
  labels:
    app: px-k8s-retriever-job
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: px/enabled
                    operator: NotIn
                    values:
                      - 'false'
                  - key: node-role.kubernetes.io/master
                    operator: DoesNotExist
                  - key: node-role.kubernetes.io/control-plane
                    operator: DoesNotExist
              - matchExpressions:
                  - key: px/enabled
                    operator: NotIn
                    values:
                      - 'false'
                  - key: node-role.kubernetes.io/master
                    operator: Exists
                  - key: node-role.kubernetes.io/worker
                    operator: Exists
              - matchExpressions:
                  - key: px/enabled
                    operator: NotIn
                    values:
                      - 'false'
                  - key: node-role.kubernetes.io/control-plane
                    operator: Exists
                  - key: node-role.kubernetes.io/worker
                    operator: Exists
      serviceAccountName: portworx-operator
      containers:
        - name: k8s-retriever
          image: calvarado2004/portworx-operator:24.02.0
          command:
            - /bin/sh
            - -c
            - /support/scripts/bin/retriever
          env:
            - name: "PX_NAMESPACE"
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: "RETRIEVER_OUTPUT_PATH"
              value: "/var/cores/px-k8s-retriever"
            - name: "RETRIEVER_POD_NAME"
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: "RETRIEVER_NODE_NAME"
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          imagePullPolicy: Always
          securityContext:
            privileged: true
            runAsUser: 0
            runAsGroup: 0
          volumeMounts:
            - name: cores-volume
              mountPath: /var/cores
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
            limits:
              cpu: 900m
              memory: 1Gi
      restartPolicy: OnFailure
      volumes:
        - name: cores-volume
          hostPath:
            path: /var/cores
            type: Directory