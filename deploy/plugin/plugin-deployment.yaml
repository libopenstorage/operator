apiVersion: apps/v1
kind: Deployment
metadata:
  name: portworx-plugin
  labels:
    app: portworx-plugin
    app.kubernetes.io/name: portworx-plugin
    app.kubernetes.io/instance: portworx-plugin
    app.kubernetes.io/part-of: portworx-plugin
spec:
  replicas: 2
  selector:
    matchLabels:
      app: portworx-plugin
      app.kubernetes.io/name: portworx-plugin
      app.kubernetes.io/instance: portworx-plugin
      app.kubernetes.io/part-of: portworx-plugin
  template:
    metadata:
      labels:
        app: portworx-plugin
        app.kubernetes.io/name: portworx-plugin
        app.kubernetes.io/instance: portworx-plugin
        app.kubernetes.io/part-of: portworx-plugin
    spec:
      containers:
        - name: portworx-plugin
          image: quay.io/kravichandran-px/portworx-dynamic-plugin:1.5.3
          ports:
            - containerPort: 9443
              protocol: TCP
          imagePullPolicy: IfNotPresent
          securityContext: 
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
          resources:
            requests:
              cpu: 10m
              memory: 50Mi
          volumeMounts:
            - name: portworx-plugin-cert
              readOnly: true
              mountPath: /var/cert
            - name: nginx-conf
              readOnly: true
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
      volumes:
        - name: portworx-plugin-cert
          secret:
            secretName: portworx-plugin-cert
            defaultMode: 420
        - name: nginx-conf
          configMap:
            name: portworx-plugin
            defaultMode: 420
      restartPolicy: Always
      dnsPolicy: ClusterFirst
      securityContext: 
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
