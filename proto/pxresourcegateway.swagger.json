{
    "openapi": "3.0.0",
    "info": {
        "title": "pxresourcegateway.proto",
        "version": "version not set"
    },
    "paths": {
        "/v1/pxe/pxresourcegateway:acquireLock": {
            "post": {
                "summary": "(-- api-linter: core::0131::synonyms=disabled\n    aip.dev/not-precedent: We need to do this because this service\n    has a semaphore implementation which needs to define AcquireLock interface. --)\nAcquireLock acquires a semaphore lock or reserves a place in the queue for the resource",
                "operationId": "SemaphoreService_AcquireLock",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/pxresourcegatewayAcquireLockResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/runtimeError"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/pxresourcegatewayAcquireLockRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "SemaphoreService"
                ]
            }
        },
        "/v1/pxe/pxresourcegateway:keepAlive": {
            "post": {
                "summary": "KeepAlive sends a heartbeat to the semaphore service to keep the lock alive",
                "operationId": "SemaphoreService_KeepAlive",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {}
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/runtimeError"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/pxresourcegatewayKeepAliveRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "SemaphoreService"
                ]
            }
        },
        "/v1/pxe/pxresourcegateway:releaseLock": {
            "post": {
                "summary": "ReleaseLock releases the semaphore lock on the resource",
                "operationId": "SemaphoreService_ReleaseLock",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {}
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/runtimeError"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/pxresourcegatewayReleaseLockRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "SemaphoreService"
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "protobufAny": {
                "type": "object",
                "properties": {
                    "type_url": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string",
                        "format": "byte"
                    }
                }
            },
            "pxresourcegatewayAcquireLockRequest": {
                "type": "object",
                "properties": {
                    "resource_id": {
                        "type": "string",
                        "title": "Resource ID to acquire the lock for"
                    },
                    "client_id": {
                        "type": "string",
                        "title": "Client ID to acquire the resource for"
                    },
                    "access_priority": {
                        "$ref": "#/components/schemas/pxresourcegatewaySemaphoreAccessPriorityType"
                    }
                },
                "title": "AcquireLockRequest is the request to acquire a semaphore lock"
            },
            "pxresourcegatewayAcquireLockResponse": {
                "type": "object",
                "properties": {
                    "access_status": {
                        "$ref": "#/components/schemas/pxresourcegatewaySemaphoreAccessStatusType"
                    }
                },
                "title": "AcquireLockResponse is the response to acquire a semaphore lock"
            },
            "pxresourcegatewayKeepAliveRequest": {
                "type": "object",
                "properties": {
                    "resource_id": {
                        "type": "string",
                        "title": "Resource ID to keep the lock alive for"
                    },
                    "client_id": {
                        "type": "string",
                        "title": "Client ID to keep the lock alive for"
                    }
                },
                "title": "KeepAliveRequest is the request to send a heartbeat to the semaphore service"
            },
            "pxresourcegatewayReleaseLockRequest": {
                "type": "object",
                "properties": {
                    "resource_id": {
                        "type": "string",
                        "title": "Resource ID to release the lock for"
                    },
                    "client_id": {
                        "type": "string",
                        "title": "Client ID to release the resource for"
                    }
                },
                "title": "ReleaseLockRequest is the request to release a semaphore lock"
            },
            "pxresourcegatewaySemaphoreAccessPriorityType": {
                "type": "string",
                "enum": [
                    "TYPE_UNSPECIFIED",
                    "LOW",
                    "MEDIUM",
                    "HIGH"
                ],
                "default": "TYPE_UNSPECIFIED",
                "description": "- TYPE_UNSPECIFIED: Unspecified, do NOT use\n - LOW: Enqueued to low priority queue\n - MEDIUM: Enqueued to medium priority queue\n - HIGH: Enqueued to high priority queue",
                "title": "Type of priority"
            },
            "pxresourcegatewaySemaphoreAccessStatusType": {
                "type": "string",
                "enum": [
                    "TYPE_UNSPECIFIED",
                    "QUEUED",
                    "LOCKED"
                ],
                "default": "TYPE_UNSPECIFIED",
                "description": "- TYPE_UNSPECIFIED: Unspecified, do NOT use\n - QUEUED: Resource is queued\n - LOCKED: Resource is locked",
                "title": "Type of status"
            },
            "runtimeError": {
                "type": "object",
                "properties": {
                    "error": {
                        "type": "string"
                    },
                    "code": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "message": {
                        "type": "string"
                    },
                    "details": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/protobufAny"
                        }
                    }
                }
            }
        }
    }
}